"use strict";(self.webpackChunkmeals_api_template=self.webpackChunkmeals_api_template||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>o});var a=t(537),r=t.n(a),i=t(645),A=t.n(i)()(r());A.push([n.id,":root {\n  --svg-side: clamp(16px, (100vw - 320px) * 1000, clamp(20px, (100vw - 640px) * 1000, clamp(25px, (100vw - 1280px) * 1000, 30px)));\n  --font-size: calc(var(--svg-side) * 0.8);\n  --bckgrd-0: #fff0;\n  --bg-modal: #c1c7d0be;\n  --bckgrd: #fff;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style-type: none;\n}\n\nbody {\n  background-color: #6e6ce9;\n  font-family: 'Pangolin', 'Merriweather', serif, cursive;\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  padding: 5px;\n}\n\n.svg {\n  margin-block: auto;\n}\n\n.modal-active .modal-bg {\n  filter: blur(5px);\n}\n\n.hidden {\n  display: none;\n}\n\n/* Navbar */\n\n.nav-bar {\n  background-color: #848bf1;\n  padding: 2%;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.logo {\n  height: calc(var(--svg-side) * 2);\n}\n\n.nav-list {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.nav-items {\n  list-style: none;\n  color: white;\n  display: flex;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n  gap: 2rem;\n  margin-top: 15px;\n  margin-right: 3rem;\n}\n\n.nav-items a {\n  text-decoration: none;\n  color: black;\n}\n\n.active {\n  font-weight: bolder;\n}\n\n/* Footer */\n\n.extremity {\n  padding-block: 10px;\n  padding-inline: 20px;\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-between;\n}\n\n.footer-row {\n  display: flex;\n  gap: 10px;\n}\n\n.app-item svg,\n.footer-row svg,\n.app-item use,\n.footer-row use {\n  height: var(--svg-side);\n  width: var(--svg-side);\n}\n\n/* Main App */\n\nmain {\n  height: auto;\n  flex-grow: 1;\n  padding: 20px;\n}\n\n#formFeedback {\n  text-align: center;\n  font-size: 2rem;\n}\n\n/* Item Container */\n\n#app-ctn {\n  --n: 2;\n  --w: 350px;\n  --n1: 3;\n  --w1: 700px;\n  --n2: 4;\n  --w2: 1050px;\n\n  display: grid;\n  column-gap: 30px;\n  row-gap: 30px;\n  grid-template-columns: repeat(auto-fit, minmax(clamp(clamp(clamp(100%/(var(--n2) + 1) + 0.1%, (var(--w2) - 100vw) * 1000, 100%/(var(--n1) + 1) + 0.1%), (var(--w1) - 100vw) * 1000, 100%/(var(--n) + 1) + 0.1%), (var(--w) - 100vw) * 1000, 100%), 3fr));\n  padding-block: 50px;\n  padding-inline: 20px;\n  max-width: 1200px;\n  margin-inline: auto;\n}\n\n.app-item {\n  padding: 5%;\n  display: flex;\n  flex-flow: column;\n  gap: 10px;\n  background-color: #848bf1;\n  border-radius: 10px;\n}\n\n.app-img {\n  width: 80%;\n  height: auto;\n  margin-inline: auto;\n}\n\n.app-title-div {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-inline: 5%;\n}\n\n.app-div-btn {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15%;\n  justify-content: center;\n}\n\n.app-like-text {\n  text-align: center;\n}\n\n.app-like-svg {\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  gap: 5px;\n}\n\n.app-btn {\n  padding-inline: 10px;\n  padding-block: 5px;\n  z-index: 1;\n  border-radius: 10px;\n  cursor: pointer;\n}\n\n.app-btn:hover {\n  background-color: rgb(114, 46, 46);\n}\n\n/* Pop-up */\n\n.app-item-popup-overlay {\n  position: fixed;\n  width: 100%;\n  height: 100vh;\n  background-color: var(--bckgrd-0);\n  top: 0;\n  left: 0;\n  z-index: 20;\n  padding-inline: 20vw;\n  padding-block: 2.5vh 15vh;\n  animation: fadeInProject 0.3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n}\n\n.app-item-popup-overlay.out {\n  animation: fadeOutProject 0.3s ease-out forwards;\n}\n\n@keyframes fadeInProject {\n  0% {\n    z-index: -3;\n    background: var(--bckgrd-0);\n  }\n\n  100% {\n    z-index: 20;\n    background: var(--bg-modal);\n  }\n}\n\n@keyframes fadOutnProject {\n  0% {\n    z-index: 20;\n    background: var(--bg-modal);\n  }\n\n  100% {\n    z-index: -3;\n    background: var(--bckgrd-0);\n  }\n}\n\n.app-item-popup {\n  padding-inline: 5%;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  background-color: var(--bckgrd);\n  border: 1px solid var(--border);\n  border-radius: 16px;\n  padding-block: 2.5% 5%;\n  max-width: 500px;\n  margin-inline: auto;\n  gap: 10px;\n  transform: scale(0.3);\n  animation: scaleUpProject 0.3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n}\n\n.out .app-item-popup {\n  animation: scaleDownProject 0.3s ease-out forwards;\n}\n\n@keyframes scaleUpProject {\n  0% {\n    transform: scale(0.3) translateY(1000px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: scale(1) translateY(0);\n    opacity: 100%;\n  }\n}\n\n@keyframes scaleDownProject {\n  0% {\n    transform: scale(1) translateY(0);\n    opacity: 100%;\n  }\n\n  100% {\n    transform: scale(0.3) translateY(1000px);\n    opacity: 0;\n  }\n}\n\n.app-exit,\n.app-title-pop {\n  font-weight: bolder;\n}\n\n.app-exit {\n  font-size: 2rem;\n  text-align: right;\n  cursor: pointer;\n}\n\n.app-property {\n  --wap: 800px;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(clamp(100%/3 + 0.1%, (var(--wap) - 100vw) * 1000, 100%), 1fr));\n  column-gap: 10px;\n  row-gap: 10px;\n}\n\n.app-img-pop {\n  width: 25vw;\n  height: auto;\n  margin-inline: auto;\n  max-width: 350px;\n}\n\n.app-title-header {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n}\n\n/* Comments and Reservation Section */\n\n.app-section-header {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.app-section-ctn {\n  height: 14vh;\n  overflow-y: scroll;\n}\n\n/* Comments and Reservation Form */\n\n.app-form-title {\n  text-align: center;\n}\n\n.app-form-ctn {\n  display: flex;\n  flex-flow: column;\n  gap: 10px;\n}\n\n.app-form-input-div {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  padding-inline: 0 5%;\n}\n\n.app-form-input-reg,\n.app-form-textArea {\n  padding-inline: 7px;\n  padding-block: 5px;\n  z-index: 1;\n  border-radius: 10px;\n}\n\n.app-form-textArea {\n  resize: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n  --svg-side: clamp(16px, (100vw - 320px) * 1000, clamp(20px, (100vw - 640px) * 1000, clamp(25px, (100vw - 1280px) * 1000, 30px)));\n  --font-size: calc(var(--svg-side) * 0.8);\n  --bckgrd-0: #fff0;\n  --bg-modal: #c1c7d0be;\n  --bckgrd: #fff;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style-type: none;\n}\n\nbody {\n  background-color: #6e6ce9;\n  font-family: 'Pangolin', 'Merriweather', serif, cursive;\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  padding: 5px;\n}\n\n.svg {\n  margin-block: auto;\n}\n\n.modal-active .modal-bg {\n  filter: blur(5px);\n}\n\n.hidden {\n  display: none;\n}\n\n/* Navbar */\n\n.nav-bar {\n  background-color: #848bf1;\n  padding: 2%;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.logo {\n  height: calc(var(--svg-side) * 2);\n}\n\n.nav-list {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.nav-items {\n  list-style: none;\n  color: white;\n  display: flex;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n  gap: 2rem;\n  margin-top: 15px;\n  margin-right: 3rem;\n}\n\n.nav-items a {\n  text-decoration: none;\n  color: black;\n}\n\n.active {\n  font-weight: bolder;\n}\n\n/* Footer */\n\n.extremity {\n  padding-block: 10px;\n  padding-inline: 20px;\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-between;\n}\n\n.footer-row {\n  display: flex;\n  gap: 10px;\n}\n\n.app-item svg,\n.footer-row svg,\n.app-item use,\n.footer-row use {\n  height: var(--svg-side);\n  width: var(--svg-side);\n}\n\n/* Main App */\n\nmain {\n  height: auto;\n  flex-grow: 1;\n  padding: 20px;\n}\n\n#formFeedback {\n  text-align: center;\n  font-size: 2rem;\n}\n\n/* Item Container */\n\n#app-ctn {\n  --n: 2;\n  --w: 350px;\n  --n1: 3;\n  --w1: 700px;\n  --n2: 4;\n  --w2: 1050px;\n\n  display: grid;\n  column-gap: 30px;\n  row-gap: 30px;\n  grid-template-columns: repeat(auto-fit, minmax(clamp(clamp(clamp(100%/(var(--n2) + 1) + 0.1%, (var(--w2) - 100vw) * 1000, 100%/(var(--n1) + 1) + 0.1%), (var(--w1) - 100vw) * 1000, 100%/(var(--n) + 1) + 0.1%), (var(--w) - 100vw) * 1000, 100%), 3fr));\n  padding-block: 50px;\n  padding-inline: 20px;\n  max-width: 1200px;\n  margin-inline: auto;\n}\n\n.app-item {\n  padding: 5%;\n  display: flex;\n  flex-flow: column;\n  gap: 10px;\n  background-color: #848bf1;\n  border-radius: 10px;\n}\n\n.app-img {\n  width: 80%;\n  height: auto;\n  margin-inline: auto;\n}\n\n.app-title-div {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-inline: 5%;\n}\n\n.app-div-btn {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15%;\n  justify-content: center;\n}\n\n.app-like-text {\n  text-align: center;\n}\n\n.app-like-svg {\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  gap: 5px;\n}\n\n.app-btn {\n  padding-inline: 10px;\n  padding-block: 5px;\n  z-index: 1;\n  border-radius: 10px;\n  cursor: pointer;\n}\n\n.app-btn:hover {\n  background-color: rgb(114, 46, 46);\n}\n\n/* Pop-up */\n\n.app-item-popup-overlay {\n  position: fixed;\n  width: 100%;\n  height: 100vh;\n  background-color: var(--bckgrd-0);\n  top: 0;\n  left: 0;\n  z-index: 20;\n  padding-inline: 20vw;\n  padding-block: 2.5vh 15vh;\n  animation: fadeInProject 0.3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n}\n\n.app-item-popup-overlay.out {\n  animation: fadeOutProject 0.3s ease-out forwards;\n}\n\n@keyframes fadeInProject {\n  0% {\n    z-index: -3;\n    background: var(--bckgrd-0);\n  }\n\n  100% {\n    z-index: 20;\n    background: var(--bg-modal);\n  }\n}\n\n@keyframes fadOutnProject {\n  0% {\n    z-index: 20;\n    background: var(--bg-modal);\n  }\n\n  100% {\n    z-index: -3;\n    background: var(--bckgrd-0);\n  }\n}\n\n.app-item-popup {\n  padding-inline: 5%;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  background-color: var(--bckgrd);\n  border: 1px solid var(--border);\n  border-radius: 16px;\n  padding-block: 2.5% 5%;\n  max-width: 500px;\n  margin-inline: auto;\n  gap: 10px;\n  transform: scale(0.3);\n  animation: scaleUpProject 0.3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n}\n\n.out .app-item-popup {\n  animation: scaleDownProject 0.3s ease-out forwards;\n}\n\n@keyframes scaleUpProject {\n  0% {\n    transform: scale(0.3) translateY(1000px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: scale(1) translateY(0);\n    opacity: 100%;\n  }\n}\n\n@keyframes scaleDownProject {\n  0% {\n    transform: scale(1) translateY(0);\n    opacity: 100%;\n  }\n\n  100% {\n    transform: scale(0.3) translateY(1000px);\n    opacity: 0;\n  }\n}\n\n.app-exit,\n.app-title-pop {\n  font-weight: bolder;\n}\n\n.app-exit {\n  font-size: 2rem;\n  text-align: right;\n  cursor: pointer;\n}\n\n.app-property {\n  --wap: 800px;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(clamp(100%/3 + 0.1%, (var(--wap) - 100vw) * 1000, 100%), 1fr));\n  column-gap: 10px;\n  row-gap: 10px;\n}\n\n.app-img-pop {\n  width: 25vw;\n  height: auto;\n  margin-inline: auto;\n  max-width: 350px;\n}\n\n.app-title-header {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n}\n\n/* Comments and Reservation Section */\n\n.app-section-header {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.app-section-ctn {\n  height: 14vh;\n  overflow-y: scroll;\n}\n\n/* Comments and Reservation Form */\n\n.app-form-title {\n  text-align: center;\n}\n\n.app-form-ctn {\n  display: flex;\n  flex-flow: column;\n  gap: 10px;\n}\n\n.app-form-input-div {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  padding-inline: 0 5%;\n}\n\n.app-form-input-reg,\n.app-form-textArea {\n  padding-inline: 7px;\n  padding-block: 5px;\n  z-index: 1;\n  border-radius: 10px;\n}\n\n.app-form-textArea {\n  resize: none;\n}\n"],sourceRoot:""}]);const o=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(a)for(var o=0;o<this.length;o++){var p=this[o][0];null!=p&&(A[p]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);a&&A[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},A=[],o=0;o<n.length;o++){var p=n[o],s=a.base?p[0]+a.base:p[0],c=i[s]||0,l="".concat(s," ").concat(c);i[s]=c+1;var d=t(l),m={css:p[1],media:p[2],sourceMap:p[3],supports:p[4],layer:p[5]};if(-1!==d)e[d].references++,e[d].updater(m);else{var u=r(m,a);a.byIndex=o,e.splice(o,0,{identifier:l,updater:u,references:1})}A.push(l)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=a(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var o=t(i[A]);e[o].references--}for(var p=a(n,r),s=0;s<i.length;s++){var c=t(i[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=p}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},660:(n,e,t)=>{var a=t(379),r=t.n(a),i=t(795),A=t.n(i),o=t(569),p=t.n(o),s=t(565),c=t.n(s),l=t(216),d=t.n(l),m=t(589),u=t.n(m),E=t(426),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=p().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=d(),r()(E.Z,C),E.Z&&E.Z.locals&&E.Z.locals,t.p;const f=(n,e)=>("string"==typeof e?n.classList.add(e):"object"==typeof e&&n.classList.add(...e),n),g=(n,e=!1,t=!1,a=!1)=>{const r=document.createElement(n);return f(r,e),t&&(r.textContent=t),a&&r.appendChild(a),r},B=n=>{const e=n.split("#"),t=document.createElementNS("http://www.w3.org/2000/svg","use");t.setAttributeNS(null,"href",`${n}`),t.classList.add(e[1]);const a=document.createElementNS("http://www.w3.org/2000/svg","svg");return a.appendChild(t),a.classList.add(e[1]),a},x=(n=!1,e=!1,t=!1,a=!1)=>{const r=g("label",e,t,a);return n&&r.setAttribute("for",n),r},v=(n=!1,e=!1,t=!1,a=!1,r=!1,i=!1,A=!1)=>{const o=g("input",e);return n&&o.setAttribute("type",n),t&&o.setAttribute("id",t),a&&o.setAttribute("name",a),r&&o.setAttribute("placeholder",r),i&&o.setAttribute("required","true"),A&&o.setAttribute("readonly","true"),o.setAttribute("spellcheck","true"),o},b=(n,e,t,a=!1,r=!1,i=!1)=>{const A=document.createElement("button");return A.type=n,A.ariaLabel=t,f(A,e),a&&(A.textContent=a),i&&A.addEventListener("click",(n=>{window.location.href=n})(i)),r&&A.appendChild(r),A},h=(n,e,t)=>{const a=g("img",n);return a.setAttribute("src",t),a.setAttribute("alt",e),a},y=n=>n.children.length,w=()=>{document.querySelector("body").classList.toggle("modal-active")},k=()=>{w();const n=document.querySelector(".app-item-popup-overlay");n.classList.add("out");const e=document.getElementById("popup");setTimeout((()=>e.removeChild(n)),400)},j=(n,e=!1)=>{const t=document.createDocumentFragment(),a=g("span",e.title,"Comments"),r=g("span",e.titleCounter),i=g("h3",e.titleheader),A=g("div",e.postCtn);let o=y(A);return i.append(a,r),0===n.length?r.textContent=` (${o})`:n.forEach((n=>{A.appendChild(((n,e)=>{const t=n.creation_date,a=n.username,r=n.comment;return g("p",e,`${t} ${a}: ${r}`)})(n,e.postItem)),o=y(A),r.textContent=` (${o})`})),t.append(i,A),t},I={container:"app-item",image:"app-img",titleHeader:"app-title-div",likesCtn:"app-like",likesIcon:"app-like-svg",likesText:"app-like-text",btnCtn:"app-div-btn",btnComment:["app-btn","comment"],btnReserve:["app-btn","reservation"]},S={container:"app-item-popup",image:"app-img-pop",titleHeader:"app-title-header",properties:"app-property",property:"app-prop",exit:"app-exit",overlay:"app-item-popup-overlay",title:"app-title-pop",sectionCtn:"app-sec-ctn",formContainer:"app-form-sec-ctn"},z={container:"app-sec-ctn",titleheader:"app-section-header",title:"app-section-title",titleCounter:["app-section-title","app-section-counter"],postCtn:"app-section-ctn",postItem:"app-section-item"},M={container:"app-form-sec-ctn",title:"app-form-title",formContainer:"app-form-ctn",inputHidden:["app-form-input-reg","hidden"],inputDiv:"app-form-input-div",inputLabel:"app-form-input-label",inputReg:"app-form-input-reg",textArea:"app-form-textArea",button:"app-btn"},P={regular:"./asset/resource/icons.svg#heart-like",red:"./asset/resource/icons.svg#heart-like-red"},D="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/",L="likes/",Y="comments",T="Wbe3IznQ2LQoFPHmVrwp/",W=async({url:n,formData:e=!1,jsonFormat:t=!1})=>{let a;e?a=Object.fromEntries(e.entries()):t&&(a=t);const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)},i=await fetch(n,r);if(!i.ok){const n=await i.text();throw new Error(n)}return i.json()},$=(n,e,t)=>`${n}${e}=${t}`,q=(n,e,t)=>`${n}${e}${t}`,U=async n=>{try{return await(async n=>{const e=await fetch(n);if(!e.ok){const n=await e.text();throw new Error(n)}return await e.json()})(n)}catch(n){return n}},F=async(n,e)=>{const t=e.filter((e=>e.item_id===n));return t.length>0?t[0].likes:0},N=async n=>{if(n.target.classList.contains("heart-like")){const e=n.target.parentNode.parentNode;(n=>{const e=n.querySelector(".heart-like"),t=n.querySelector(".heart-like-red");e.classList.add("hidden"),t.classList.remove("hidden")})(e);const t=n.currentTarget.dataset.id,a=q(D,T,L);await(async(n,e)=>{try{return await W({url:n,formData:!1,jsonFormat:e})}catch(n){return n}})(a,await(async n=>({item_id:n}))(t));const r=await U(a),i=await F(t,r);await(async(n,e)=>{n.querySelector(".app-like-text").textContent=`${e} like${e>1?"s":""}`})(e,await i)}},X=async n=>{const e=await(async n=>{const e=`${D}${T}${Y}?item_id=${n}`;return await U(e)})(n);return e instanceof Error?[]:e},O=async n=>{n.preventDefault();const e=q(D,T,Y),t=n.currentTarget.id,a=document.querySelector(".app-sec-ctn");await(async(n,e)=>{n.preventDefault();const t=n.currentTarget;try{const n=new FormData(t);return t.reset(),await W({url:e,formData:n})}catch(n){return n}})(n,e);const r=await X(t);a.innerHTML="",a.appendChild(j(r,z))},R=async n=>{const e=await X(n.idMeal);w();const t=((n,e,t,a=!1,r=!1)=>{const i=document.createDocumentFragment(),A=g("div",e.titleHeader),o=g("h2",e.title,t.strMeal),p=g("span",e.exit,"X");p.addEventListener("click",k),A.append(o,p),i.appendChild(A),i.appendChild(h(e.image,t.strMeal,t.strMealThumb));const s=g("div",e.properties),c=g("p",e.property,`Name: ${t.strMeal}`),l=g("p",e.property,`Category: ${t.strCategory}`),d=g("p",e.property,`Area: ${t.strArea}`),m=t.strTags?t.strTags.split(",").join(", "):"NONE",u=g("p",e.property,`Area: ${m}`);s.append(c,l,d,u),i.appendChild(s);const E=g("div",e.sectionCtn),C=g("div",e.formContainer);a&&E.appendChild(a),r&&C.appendChild(r),i.append(E,C);const f=g(n,e.container,!1,i);return f.setAttribute("data-id",t.idMeal),g(n,e.overlay,!1,f)})("div",S,n,j(e,z),((n,e,t=!1)=>{const a=document.createDocumentFragment(),r=g("h3",t.title,"Add a comment"),i=g("form",t.formContainer);i.setAttribute("id",n);const A=v("text",t.inputHidden,"item_id","item_id",!1,!0,!0);A.setAttribute("value",n);const o=x("username",t.inputLabel,"Name"),p=v("text",t.inputReg,"username","username","Please input your name",!0,!1),s=g("div",t.inputDiv,!1,o);s.appendChild(p);const c=x("comment",t.inputLabel,"Comment"),l=((n=!1,e=!1,t=!1,a=!1,r=!1,i=!1)=>{const A=g("textarea",e);return n&&A.setAttribute("maxlength",n),t&&A.setAttribute("id",t),a&&A.setAttribute("name",a),r&&A.setAttribute("placeholder",r),i?A.setAttribute("required","true"):A.setAttribute("required","false"),A.setAttribute("spellcheck","true"),A})("250",t.textArea,"comment","comment","Please input your comment",!0),d=g("div",t.inputDiv,!1,c);d.appendChild(l);const m=b("submit",t.button,"Submit comment","Submit");return i.append(A,s,d,m),i.addEventListener("submit",e),a.append(r,i),a})(n.idMeal,O,M)),a=document.getElementById("popup");a.innerHTML="",a.appendChild(t)},Z=async n=>{document.getElementById("formFeedback").textContent=n},H=async n=>{const e=await(async n=>await n.target.getAttribute("href"))(n),t=await(async n=>{const e=$("https://www.themealdb.com/api/json/v1/1/filter.php?","c",await n);return await U(e)})(e),a=await(async()=>{const n=q(D,T,L);return await U(n)})();t instanceof Error||a instanceof Error?Z("Unable to Fetch Data"):await(async(n,e,t)=>{const a=document.getElementById("app-ctn");a.innerHTML="",n.forEach((async n=>{const r=await(async n=>{const e=$("https://www.themealdb.com/api/json/v1/1/lookup.php?","i",await n);return await U(e)})(n.idMeal),i=((n,e,t,a,r,i=!1,A=!1)=>{const o=document.createDocumentFragment();o.appendChild(h(e.image,t.strMeal,t.strMealThumb));const p=g("div",e.titleHeader),s=g("p",e.likesCtn,t.strMeal);p.appendChild(s);const c=g("div",e.likesIcon),l=B(a.regular),d=B(a.red);d.classList.add("hidden");const m=g("p",e.likesText,`${r} like${r>1?"s":""}`);c.append(l,d,m),p.appendChild(c),o.appendChild(p);const u=g("div",e.classDivBtn),E=b("button",e.btnComment,"Go to Comments","Comments");A&&E.addEventListener("click",A),u.appendChild(E),u.appendChild(b("button",e.btnReserve,"Go to Reservations","Reservations")),o.appendChild(u);const C=g(n,e.container,!1,o);return C.setAttribute("data-id",t.idMeal),i&&C.addEventListener("click",i),C})("li",I,r.meals[0],P,await F(r.meals[0].idMeal,e),N,(()=>R(r.meals[0])));var A,o;a.appendChild(i),A=y(a),o=t,document.getElementById(o).textContent=` (${A})`})),Z("Please Select a Meal")})(t.meals,a,e)},_=document.querySelectorAll(".query a"),V=document.querySelectorAll(".counter");_.forEach((n=>{n.addEventListener("click",(e=>{e.preventDefault(),_.forEach((n=>n.classList.remove("active"))),n.classList.add("active"),V.forEach((n=>{n.textContent=""})),H(e)}))}))}},n=>{n(n.s=660)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,